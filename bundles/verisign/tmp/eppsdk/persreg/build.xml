<!--
Copyright (C) 2004 VeriSign, Inc.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-0107  USA

http://www.verisign.com/nds/naming/namestore/techdocs.html
-->

<project name="EPP SDK-PersReg" default="jar" basedir=".">

	<import file="${basedir}/common-targets.xml"/>	

	<!-- SDK home directory -->
    <property name="sdk.home.dir" location=".."/>

	<!-- Ensure environment variables are set to env prefixed properties -->
	<property environment="env"/>

	<!-- All properties can be overridden in build.properties -->
    <property file="${basedir}/build.properties"/>

    <property name="persreg.gen.dir" value="${sdk.home.dir}/gen"/>
    <property name="persreg.domain.dir" value="${sdk.home.dir}/domain"/>
    <property name="persreg.emailfwd.dir" value="${sdk.home.dir}/emailfwd"/>
    <property name="persreg.nsfinance.dir" value="${sdk.home.dir}/nsfinance"/>
    <property name="persreg.gen.src.dir" value="${persreg.gen.dir}/java"/>

	<!-- Temporary directory used for distribution -->
    <property name="persreg.tmp.dir" location="${persreg.dir}/tmp"/>
	
	<!-- compiler option properties -->
    <property name="debug" value="on"/>
    <property name="optimize" value="on"/>
    <property name="deprecation" value="on"/>

	<!-- classpath to use for compilation tasks -->
	<path id="persreg.compile.classpath">
		<fileset dir="${persreg.lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${persreg.epp.lib.dir}">
			<include name="epp-gen.jar"/>
		</fileset>
		<fileset dir="${persreg.epp.lib.dir}">
			<include name="epp-domain.jar"/>
		</fileset>
		<fileset dir="${persreg.epp.lib.dir}">
			<include name="epp-emailfwd.jar"/>
		</fileset>
		<fileset dir="${persreg.epp.lib.dir}">
			<include name="epp-nsfinance.jar"/>
		</fileset>
	</path>

	<!-- classpath to use for compilation tasks -->
	<path id="persreg.test.classpath">
		<fileset dir="${persreg.epp.lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<path refid="persreg.compile.classpath"/>
	</path>


  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
  <target 	name="init"
			description="Initializes the build for rest of targets ">

	<!-- set time stamp properties -->
    <tstamp/>
	
	<!-- Give build.version a default value of SNAPSHOT -->
	<property name="build.version" value="SNAPSHOT"/>

    <echo message="----------- ${ant.project.name} ${build.version} ------------"/>

	<mkdir dir="${persreg.results.dir}" />
	<mkdir dir="${persreg.build.dir}" />
	<mkdir dir="${persreg.epp.lib.dir}" />


  </target>

  <!-- =================================================================== -->
  <!-- Builds the epp-gen.jar file               		                   -->
  <!-- =================================================================== -->
  <target 	name="jar-gen"
  			description="Build the dependent epp-gen.jar file" >
		<ant dir="${persreg.gen.dir}" target="jar" />
  </target>

  <!-- =================================================================== -->
  <!-- Cleans the epp-gen files               		                       -->
  <!-- =================================================================== -->
  <target 	name="clean-gen"
  			description="Clean the epp-gen files" >
		<ant dir="${persreg.gen.dir}" target="clean" />
  </target>
  
  <!-- =================================================================== -->
  <!-- Builds the epp-domain.jar file               		                   -->
  <!-- =================================================================== -->
   <target 	name="jar-domain"
		description="Build the dependent epp-domain.jar file" >
	<ant dir="${persreg.domain.dir}" target="jar" />
   </target>
 
  <!-- =================================================================== -->
  <!-- Cleans the epp-domain files               		                       -->
  <!-- =================================================================== -->
  <target 	name="clean-domain"
  			description="Clean the epp-domain files" >
		<ant dir="${persreg.domain.dir}" target="clean" />
  </target>

  <!-- =================================================================== -->
  <!-- Builds the epp-emailfwd.jar file               		                   -->
  <!-- =================================================================== -->
   <target 	name="jar-emailfwd"
		description="Build the dependent epp-emailfwd.jar file" >
	<ant dir="${persreg.emailfwd.dir}" target="jar" />
   </target>
 
  <!-- =================================================================== -->
  <!-- Cleans the epp-emailfwd files               		                       -->
  <!-- =================================================================== -->
  <target 	name="clean-emailfwd"
  			description="Clean the epp-emailfwd files" >
		<ant dir="${persreg.emailfwd.dir}" target="clean" />
  </target>


  <!-- =================================================================== -->
  <!-- Builds the epp-nsfinance.jar file               		                   -->
  <!-- =================================================================== -->
  <target 	name="jar-nsfinance"
 			description="Build the dependent epp-nsfinance.jar file" >
		<ant dir="${persreg.nsfinance.dir}" target="jar" />
  </target>

  <!-- =================================================================== -->
  <!-- Cleans the epp-gen files               		                       -->
  <!-- =================================================================== -->
   <target 	name="clean-nsfinance"
			description="Clean the epp-nsfinance files" >
		<ant dir="${persreg.nsfinance.dir}" target="clean" />
   </target>


  <!-- =================================================================== -->
  <!-- Compiles source files                                     		   -->
  <!-- =================================================================== -->
  <target 	name="compile" depends="init, jar-gen, jar-domain, jar-emailfwd, jar-nsfinance"
  			description="Compile EPP SDK-PersReg source files" >

    <echo message="${ant.project.name} ${build.version} Compile"/>
    <javac srcdir="${persreg.src.dir}"
		   destdir="${persreg.build.dir}"
           debug="${debug}"
           optimize="${optimize}"
		   deprecation="${deprecation}"
		   failonerror="true"
 	       target="1.6"
		   >
		<classpath refid="persreg.compile.classpath" />
	</javac>

  </target>

  <!-- =================================================================== -->
  <!-- Creates epp-persreg.jar                                                -->
  <!-- =================================================================== -->
  <target 	name="jar" depends="compile"
  			description="Generates EPP SDK-PersReg .jar file (default)" >
			
	<!-- Set default value of build.version to SNAPSHOT -->
	<property name="build.version" value="SNAPSHOT"/>

	<jar jarfile="${persreg.epp.lib.dir}/epp-persreg.jar" >
			<manifest>
					<attribute name="baseline" value="EPP-CONTACT-SDK-${build.version}"/>
			</manifest>
		<fileset dir="${persreg.build.dir}"
			includes="com/**/*.class" />
		<fileset dir="${persreg.dir}"
			includes="schemas/*.xsd" />
	</jar>

  </target>

  <!-- =================================================================== -->
  <!-- Formats the source code using Jalopy                                -->
  <!-- =================================================================== -->
  <target name="format" 
		  description="Format the source code">
		  		<taskdef name="jalopy"
				 classname="de.hunsicker.jalopy.plugin.ant.AntPlugin">
			<classpath>
				<fileset dir="${persreg.lib.dir}/jalopy">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>
		<jalopy fileformat="unix"
				convention="${persreg.lib.dir}/jalopy/sdk-convention.xml"
				loglevel="info"
				threads="2"
				classpathref="persreg.compile.classpath">
				<fileset dir="${persreg.src.dir}">
					<include name="**/*.java"/>
					<exclude name="**/types/*.java"/>
				</fileset>
		</jalopy>

  </target>

  <!-- =================================================================== -->
  <!-- Creates the HTML API documentation                                  -->
  <!-- =================================================================== -->
  <target 	name="doc"
  			description="Generate EPP SDK-PersReg HTML API documentation" >

    <mkdir dir="${persreg.doc.dir}/html"/>
    <javadoc packagenames="com.verisign.epp.*"
             sourcepath="${persreg.src.dir}:${persreg.gen.src.dir}"
             destdir="${persreg.doc.dir}/html"
             author="true"
             version="true"
             use="true"
			 breakiterator="true"			 
             splitindex="true"
             noindex="false"
             windowtitle="${ant.project.name} API"
             doctitle="${ant.project.name}"
             bottom="Copyright &#169; VeriSign Inc. All Rights Reserved.">
		<classpath refid="persreg.compile.classpath" />
	</javadoc>

  </target>



	<!-- =================================================================== -->
	<!-- Ensure that build.version is set                                    -->
	<!-- =================================================================== -->
	<target name="check-build-version" unless="build.version">
		<fail message="Must set build.version with -Dbuild.version=X"/>
	</target>

	<!-- =================================================================== -->
	<!-- Creates SDK source distribution                                     -->
	<!-- =================================================================== -->
	<target name="dist-src" depends="check-build-version, init"
				description = "Creates SDK source distribution (-Dbuild.version required)" >
		<mkdir dir="${persreg.dist.dir}" />
	
		<!-- Create source .zip distribution -->
		<zip destfile="${persreg.dist.dir}/epp-persreg-${build.version}-src.zip">
			<zipfileset dir="${persreg.license.dir}" prefix="eppsdk/license"/>
			<zipfileset dir="${persreg.lib.dir}" prefix="eppsdk/lib">
				<exclude name="epp/**"/>
			</zipfileset>
			<zipfileset dir="${persreg.epp.lib.dir}" prefix="eppsdk/lib/epp">
				<include name="${persreg.epp.lib.dir}/epp-gen-${build.version}.jar"/>
			</zipfileset>
			<zipfileset dir="${persreg.dir}" prefix="eppsdk/persreg">
				<exclude name="junit*"/>
				<exclude name="*.log*"/>
				<exclude name="*.err"/>
				<exclude name="build-bin.xml"/>
				<exclude name="doc/*.doc"/>
				<exclude name="doc/html/**"/>
				<exclude name="results/**"/>
				<exclude name="build/**"/>
			</zipfileset>
		</zip>
		
		<!-- Create source .tar.gz distribution -->
		<tar destfile="${persreg.dist.dir}/epp-persreg-${build.version}-src.tar.gz"
			compression="gzip">
			<tarfileset dir="${persreg.license.dir}" prefix="eppsdk/license"/>
			<tarfileset dir="${persreg.lib.dir}" prefix="eppsdk/lib">
				<exclude name="epp/**"/>
			</tarfileset>			
			<tarfileset dir="${persreg.dir}" mode="755" prefix="eppsdk/persreg">
				<exclude name="junit*"/>
				<exclude name="*.log*"/>
				<exclude name="*.err"/>
				<exclude name="build-bin.xml"/>
				<exclude name="doc/*.doc"/>
				<exclude name="doc/html/**"/>
				<exclude name="results/**"/>
				<exclude name="build/**"/>
			</tarfileset>
		</tar>		
		
	</target>
		


	<!-- =================================================================== -->
	<!-- Creates SDK binary distribution                                     -->
	<!-- =================================================================== -->
	<target name="dist-bin" depends="check-build-version, jar, test, doc"
				description = "Creates SDK binary distribution (-Dbuild.version required)" >
		<mkdir dir="${persreg.dist.dir}" />
		<mkdir dir="${persreg.tmp.dir}" />
		
		<copy file="${persreg.dir}/build-bin.xml" tofile="${persreg.tmp.dir}/build.xml"/>
		

		<!-- Create binary .zip distribution -->
		<zip destfile="${persreg.dist.dir}/epp-persreg-${build.version}-bin.zip">
			<zipfileset dir="${persreg.license.dir}" prefix="eppsdk/license"/>
			<zipfileset dir="${persreg.lib.dir}" prefix="eppsdk/lib"/>
			<zipfileset dir="${persreg.tmp.dir}" includes="build.xml" prefix="eppsdk/persreg"/>
			<zipfileset dir="${persreg.dir}" prefix="eppsdk/persreg">
				<exclude name="*.log"/>
				<exclude name="*.err"/>
				<exclude name="java/**"/>
				<exclude name="schemas/**"/>
				<exclude name="build.xml"/>
				<exclude name="build-bin.xml"/>
				<exclude name="doc/*.doc"/>
				<exclude name="results/**"/>
				<exclude name="build/**"/>
				<exclude name="tmp/**"/>
			</zipfileset>
		</zip>

		<!-- Create binary .tar.gz distribution -->
		<tar destfile="${persreg.dist.dir}/epp-persreg-${build.version}-bin.tar.gz"
			compression="gzip">
			<tarfileset dir="${persreg.license.dir}" prefix="eppsdk/license"/>
			<tarfileset dir="${persreg.lib.dir}" prefix="eppsdk/lib"/>
			<tarfileset dir="${persreg.tmp.dir}" includes="build.xml" prefix="eppsdk/persreg"/>
			<tarfileset dir="${persreg.dir}" mode="755" prefix="eppsdk/persreg">
				<exclude name="*.log"/>
				<exclude name="*.err"/>
				<exclude name="java/**"/>
				<exclude name="schemas/**"/>
				<exclude name="build.xml"/>
				<exclude name="build-bin.xml"/>
				<exclude name="doc/*.doc"/>
				<exclude name="results/**"/>
				<exclude name="build/**"/>
				<exclude name="tmp/**"/>
			</tarfileset>
		</tar>		

		<delete dir="${persreg.tmp.dir}"/>
	</target>

	<!-- =================================================================== -->
	<!-- Creates SDK distributions						                     -->
	<!-- =================================================================== -->
	<target name="dist" depends="dist-src, dist-bin"
				description = "Creates SDK distributions (-Dbuild.version required)" >
	</target>

  <!-- =================================================================== -->
  <!-- Clean targets                                                       -->
  <!-- =================================================================== -->
  <target 	name="clean" depends="init, clean-gen, clean-domain, clean-emailfwd, clean-nsfinance"
			description="Clean EPP SDK-PersReg compiled files" >

		<!-- Clean build directory -->
		<delete dir="${persreg.build.dir}" quiet="true"/>
		
		<!-- Clean the EPP lib directory -->
		<delete dir="${persreg.epp.lib.dir}" quiet="true"/>

		<!-- Clean results directory -->
		<delete dir="${persreg.results.dir}" quiet="true"/>

		<!-- Clean log files -->
		<delete>
			<fileset dir="${persreg.dir}" includes="*.log, *.err"/>
		</delete>

		<!-- Clean generated documentation files -->
		<delete dir="${persreg.doc.dir}/html" quiet="true"/>

		<!-- Clean distribution directory -->
		<delete dir="${persreg.dist.dir}" quiet="true"/>

		<!-- Clean the tmp directory -->
		<delete dir="${persreg.tmp.dir}" quiet="true"/>
		
  </target>

</project>

<!-- End of file -->
